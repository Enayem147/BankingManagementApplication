/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package panel;

import connection.Connect;
import java.awt.Dimension;
import java.awt.event.KeyEvent;
import java.math.BigDecimal;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Types;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JDialog;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author 84965
 */
public class ChuyenTienPanel extends javax.swing.JPanel {

    DecimalFormat decimalFormat = new DecimalFormat("###,###,###");
    private int count = 0;
    private BigDecimal amount = new BigDecimal(0);
    private BigDecimal tien_gui = new BigDecimal(0);
    private BigDecimal tien_nhan = new BigDecimal(0);
    Connect connect = new Connect();
    Connection conn = connect.getConnection();

    /**
     * Creates new form RutTienPanel
     */
    public ChuyenTienPanel() {
        initComponents();
        this.setPreferredSize(new Dimension(668, 445));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGroup = new javax.swing.ButtonGroup();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnTimCMND_G = new javax.swing.JButton();
        txtCMND_G = new javax.swing.JTextField();
        txtSTK_G = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        btnTimSTK_G = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        btnTimCMND_N = new javax.swing.JButton();
        txtCMND_N = new javax.swing.JTextField();
        txtSTK_N = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        btnTimSTK_N = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        txtSoTien = new javax.swing.JTextField();
        btnChuyenTien = new javax.swing.JButton();
        txtChuTK_G = new javax.swing.JLabel();
        txtChuTK_N = new javax.swing.JLabel();
        txtSoDu_N = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txtSoDu_G = new javax.swing.JLabel();
        btnHuy = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(242, 242, 242));

        jLabel2.setText("Số chứng minh thư :");

        jLabel3.setText("Số tài khoản : ");

        btnTimCMND_G.setText("Tìm");
        btnTimCMND_G.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimCMND_GActionPerformed(evt);
            }
        });

        jLabel6.setText("Chủ tài khoản : ");

        btnTimSTK_G.setText("Tìm");
        btnTimSTK_G.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimSTK_GActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 191, Short.MAX_VALUE)
        );

        jLabel8.setText("Số tài khoản : ");

        btnTimCMND_N.setText("Tìm");
        btnTimCMND_N.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimCMND_NActionPerformed(evt);
            }
        });

        jLabel9.setText("Số chứng minh thư :");

        jLabel10.setText("Chủ tài khoản : ");

        jLabel11.setText("Số dư :");

        btnTimSTK_N.setText("Tìm");
        btnTimSTK_N.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimSTK_NActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("THÔNG TIN TÀI KHOẢN NGƯỜI NHẬN");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(28, 28, 28))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 13, Short.MAX_VALUE)
                .addComponent(jLabel4))
        );

        jPanel4.setBackground(new java.awt.Color(0, 0, 0));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("THÔNG TIN TÀI KHOẢN NGƯỜI GỬI");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(35, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(32, 32, 32))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 13, Short.MAX_VALUE)
                .addComponent(jLabel1))
        );

        jPanel5.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1, Short.MAX_VALUE)
        );

        jLabel5.setText("Số tiền muốn chuyển : ");

        btnChuyenTien.setText("Chuyển tiền");
        btnChuyenTien.setEnabled(false);
        btnChuyenTien.setPreferredSize(new java.awt.Dimension(100, 30));
        btnChuyenTien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChuyenTienActionPerformed(evt);
            }
        });

        jLabel17.setText("Số dư :");

        btnHuy.setText("Hủy");
        btnHuy.setEnabled(false);
        btnHuy.setPreferredSize(new java.awt.Dimension(100, 30));
        btnHuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("đ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel17))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtSoDu_G, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtSTK_G, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                                            .addComponent(txtCMND_G))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btnTimCMND_G)
                                            .addComponent(btnTimSTK_G)))
                                    .addComponent(txtChuTK_G, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel11))
                                .addGap(31, 31, 31)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtSoDu_N, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtChuTK_N, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel9))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtCMND_N, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                                    .addComponent(txtSTK_N))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnTimSTK_N)
                                    .addComponent(btnTimCMND_N)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(171, 171, 171)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSoTien, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(202, 202, 202)
                        .addComponent(btnChuyenTien, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnHuy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(54, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(btnTimCMND_N)
                            .addComponent(txtCMND_N, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txtSTK_N, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnTimSTK_N))
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(txtChuTK_N))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(txtSoDu_N)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(btnTimCMND_G)
                            .addComponent(txtCMND_G, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtSTK_G, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnTimSTK_G))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtChuTK_G))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSoDu_G)
                            .addComponent(jLabel17)))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtSoTien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnChuyenTien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnHuy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(84, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    private void setStatus_G(boolean status) {
        txtCMND_G.setEnabled(status);
        txtSTK_G.setEnabled(status);
        btnTimCMND_G.setEnabled(status);
        btnTimSTK_G.setEnabled(status);
        btnHuy.setEnabled(!status);
        count++;
        if (count == 2) {
            btnChuyenTien.setEnabled(!status);
        }
    }

    private void setStatus_N(boolean status) {
        txtCMND_N.setEnabled(status);
        txtSTK_N.setEnabled(status);
        btnTimCMND_N.setEnabled(status);
        btnTimSTK_N.setEnabled(status);
        btnHuy.setEnabled(!status);
        count++;
        if (count == 2) {
            btnChuyenTien.setEnabled(!status);
        }
    }

    private double convertDecimalToDouble(BigDecimal money) {
        return Double.parseDouble(money.toString());
    }

    private void getSTKDialog_Gui(String stk_list[]) {
        final JComboBox<String> combo = new JComboBox<>(stk_list);
        String[] options = {"Xác nhận", "Trở về"};

        String title = "Chọn tài khoản";
        int selection = JOptionPane.showOptionDialog(null, combo, title,
                JOptionPane.DEFAULT_OPTION, JOptionPane.PLAIN_MESSAGE, null, options,
                options[0]);

        if (selection >= 0) {
            if (options[selection].equals("Xác nhận")) {
                String stk = combo.getSelectedItem().toString();
                if (stk != null) {
                    CallableStatement cs = null;
                    ResultSet rs = null;
                    try {
                        cs = conn.prepareCall("{call TIM_TK_STK(?)}");
                        cs.setString(1, stk);
                        rs = cs.executeQuery();
                        while (rs.next()) {
                            txtSTK_G.setText(stk);
                            txtChuTK_G.setText(rs.getString("KH_HOTEN"));
                            txtSoDu_G.setText(decimalFormat.format(rs.getBigDecimal("TK_SODU")));
                            tien_gui = rs.getBigDecimal("TK_SODU");
                            setStatus_G(false);
                        }

                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(this, "Số tài khoản không đúng");
                    }
                }
            }
        }
    }

    private void getSTKDialog_Nhan(String stk_list[]) {
        final JComboBox<String> combo = new JComboBox<>(stk_list);
        String[] options = {"Xác nhận", "Trở về"};

        String title = "Chọn tài khoản";
        int selection = JOptionPane.showOptionDialog(null, combo, title,
                JOptionPane.DEFAULT_OPTION, JOptionPane.PLAIN_MESSAGE, null, options,
                options[0]);

        if (selection >= 0) {
            if (options[selection].equals("Xác nhận")) {
                String stk = combo.getSelectedItem().toString();
                if (stk != null) {
                    CallableStatement cs = null;
                    ResultSet rs = null;
                    try {
                        cs = conn.prepareCall("{call TIM_TK_STK(?)}");
                        cs.setString(1, stk);
                        rs = cs.executeQuery();
                        while (rs.next()) {
                            txtSTK_N.setText(stk);
                            txtChuTK_N.setText(rs.getString("KH_HOTEN"));
                            txtSoDu_N.setText(decimalFormat.format(rs.getBigDecimal("TK_SODU")));
                            tien_nhan = rs.getBigDecimal("TK_SODU");
                            setStatus_N(false);
                        }

                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(this, "Số tài khoản không đúng");
                    }
                }
            }
        }
    }

    private void btnTimCMND_GActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimCMND_GActionPerformed
        CallableStatement cs = null;
        ResultSet rs = null;
        if (!txtCMND_G.getText().equals("")) {
            try {
                String cmnd = txtCMND_G.getText();
                cs = conn.prepareCall("{call TIM_TK_CMND(?)}");
                cs.setString(1, cmnd);
                rs = cs.executeQuery();
                int count = 0;
                rs.last();
                count = rs.getRow();
                if (count > 1) {
                    rs.first();
                    String[] arr = new String[count];
                    int i = 0;
                    arr[i] = rs.getString("TK_STK");
                    while (rs.next()) {
                        i++;
                        arr[i] = rs.getString("TK_STK");
                    }
                    getSTKDialog_Gui(arr);
                } else if (count == 1) {
                    if (rs.first()) {
                        txtSTK_G.setText(rs.getString("TK_STK"));
                        txtChuTK_G.setText(rs.getString("KH_HOTEN"));
                        txtSoDu_G.setText(decimalFormat.format(rs.getBigDecimal("TK_SODU")));
                        tien_gui = rs.getBigDecimal("TK_SODU");
                        setStatus_G(false);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Số chứng minh không đúng");
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Số chứng minh không đúng");
            } finally {
//giải phóng tài nguyên khi không sử dụng nữa
                if (rs != null) {
                    try {
                        rs.close();
                    } catch (SQLException sqlEx) {
                    } //đoạn mã xử lý ng/lệ
                    rs = null;
                }
                if (cs != null) {
                    try {
                        cs.close();
                    } catch (SQLException sqlEx) {
                    } //đoạn mã xử lý ng/lệ
                    cs = null;
                }

            }
        } else {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập số chưng minh thư");
        }
    }//GEN-LAST:event_btnTimCMND_GActionPerformed

    private void btnTimSTK_GActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimSTK_GActionPerformed
        // TODO add your handling code here:
        CallableStatement cs = null;
        ResultSet rs = null;
        if (!txtSTK_G.getText().equals("")) {
            try {
                String stk = txtSTK_G.getText();
                cs = conn.prepareCall("{call TIM_TK_STK(?)}");
                cs.setString(1, stk);
                rs = cs.executeQuery();
                if (rs.first()) {
                    txtCMND_G.setText(rs.getString("KH_CMND"));
                    txtChuTK_G.setText(rs.getString("KH_HOTEN"));
                    txtSoDu_G.setText(decimalFormat.format(rs.getBigDecimal("TK_SODU")));
                    tien_gui = rs.getBigDecimal("TK_SODU");
                    setStatus_G(false);
                } else {
                    JOptionPane.showMessageDialog(this, "Số tài khoản không đúng");
                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Số tài khoản không đúng");
            } finally {
//giải phóng tài nguyên khi không sử dụng nữa
                if (rs != null) {
                    try {
                        rs.close();
                    } catch (SQLException sqlEx) {
                    } //đoạn mã xử lý ng/lệ
                    rs = null;
                }
                if (cs != null) {
                    try {
                        cs.close();
                    } catch (SQLException sqlEx) {
                    } //đoạn mã xử lý ng/lệ
                    cs = null;
                }

            }
        } else {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập số tài khoản");
        }
    }//GEN-LAST:event_btnTimSTK_GActionPerformed

    private void btnTimCMND_NActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimCMND_NActionPerformed
        // TODO add your handling code here:
        CallableStatement cs = null;
        ResultSet rs = null;
        if (!txtCMND_N.getText().equals("")) {
            try {
                String cmnd = txtCMND_N.getText();
                cs = conn.prepareCall("{call TIM_TK_CMND(?)}");
                cs.setString(1, cmnd);
                rs = cs.executeQuery();
                int count = 0;
                rs.last();
                count = rs.getRow();
                if (count > 1) {
                    rs.first();
                    String[] arr = new String[count];
                    int i = 0;
                    arr[i] = rs.getString("TK_STK");
                    while (rs.next()) {
                        i++;
                        arr[i] = rs.getString("TK_STK");
                    }
                    getSTKDialog_Nhan(arr);
                } else if (count == 1) {
                    if (rs.first()) {
                        txtSTK_N.setText(rs.getString("TK_STK"));
                        txtChuTK_N.setText(rs.getString("KH_HOTEN"));
                        txtSoDu_N.setText(decimalFormat.format(rs.getBigDecimal("TK_SODU")));
                        tien_nhan = rs.getBigDecimal("TK_SODU");
                        setStatus_N(false);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Số chứng minh không đúng");
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Số chứng minh không đúng");
            } finally {
//giải phóng tài nguyên khi không sử dụng nữa
                if (rs != null) {
                    try {
                        rs.close();
                    } catch (SQLException sqlEx) {
                    } //đoạn mã xử lý ng/lệ
                    rs = null;
                }
                if (cs != null) {
                    try {
                        cs.close();
                    } catch (SQLException sqlEx) {
                    } //đoạn mã xử lý ng/lệ
                    cs = null;
                }

            }
        } else {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập số chưng minh thư");
        }
    }//GEN-LAST:event_btnTimCMND_NActionPerformed

    private void btnTimSTK_NActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimSTK_NActionPerformed
        // TODO add your handling code here:
        CallableStatement cs = null;
        ResultSet rs = null;
        if (!txtSTK_N.getText().equals("")) {
            try {
                String stk = txtSTK_N.getText();
                cs = conn.prepareCall("{call TIM_TK_STK(?)}");
                cs.setString(1, stk);
                rs = cs.executeQuery();
                if (rs.first()) {
                    txtCMND_N.setText(rs.getString("KH_CMND"));
                    txtChuTK_N.setText(rs.getString("KH_HOTEN"));
                    txtSoDu_N.setText(decimalFormat.format(rs.getBigDecimal("TK_SODU")));
                    tien_nhan = rs.getBigDecimal("TK_SODU");
                    setStatus_N(false);
                } else {
                    JOptionPane.showMessageDialog(this, "Số tài khoản không đúng");
                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Số tài khoản không đúng");
            } finally {
//giải phóng tài nguyên khi không sử dụng nữa
                if (rs != null) {
                    try {
                        rs.close();
                    } catch (SQLException sqlEx) {
                    } //đoạn mã xử lý ng/lệ
                    rs = null;
                }
                if (cs != null) {
                    try {
                        cs.close();
                    } catch (SQLException sqlEx) {
                    } //đoạn mã xử lý ng/lệ
                    cs = null;
                }

            }
        } else {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập số tài khoản");
        }
    }//GEN-LAST:event_btnTimSTK_NActionPerformed

    private void getDialogReview(String stk_gui, String stk_nhan, String sotien, String sodu_gui, String sodu_nhan) {
        String[] options = {"Xác nhận"};
        String title = "Thông tin giao dịch";
        String content = "Số tiền đã chuyển:  " + sotien
                + "\nSố tài khoản gữi:     " + stk_gui + ""
                + "\nSố dư hiện tại:         " + sodu_gui
                + "\nSố tài khoản nhận: " + stk_nhan + ""
                + "\nSố dư hiện tại:         " + sodu_nhan;
        int selection = JOptionPane.showOptionDialog(null, content, title,
                JOptionPane.DEFAULT_OPTION, JOptionPane.PLAIN_MESSAGE, null, options,
                options[0]);
    }

    private void btnChuyenTienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChuyenTienActionPerformed
        // TODO add your handling code here:
        CallableStatement cs = null;
        if (!txtSTK_G.getText().equals(txtSTK_N.getText())) {
            if (getSoTien()) {
                if (convertDecimalToDouble(amount) >= 10000) {
                    try {
                        String STK_G = txtSTK_G.getText();
                        String STK_N = txtSTK_N.getText();
                        cs = conn.prepareCall("{call CHUYEN_TIEN(?,?,?,?)}");
                        cs.setString(1, STK_G);
                        cs.setString(2, STK_N);
                        cs.setBigDecimal(3, amount);
                        cs.registerOutParameter(4, Types.INTEGER);
                        cs.executeQuery();
                        if (cs.getInt(4) == 0) {
                            JOptionPane.showMessageDialog(this, "Có lỗi xảy ra");
                        } else if (cs.getInt(4) == 1) {
                            String stk_gui = txtSTK_G.getText();
                            String stk_nhan = txtSTK_N.getText();
                            String sotien = decimalFormat.format(amount) + " đ";
                            String sodu_gui = decimalFormat.format(new BigDecimal(convertDecimalToDouble(tien_gui) - convertDecimalToDouble(amount))) + " đ";
                            String sodu_nhan = decimalFormat.format(new BigDecimal(convertDecimalToDouble(tien_nhan) + convertDecimalToDouble(amount))) + " đ";
                            JOptionPane.showMessageDialog(this, "Chuyển tiền thành công");
                            resetFields();
                            getDialogReview(stk_gui, stk_nhan, sotien, sodu_gui, sodu_nhan);
                        } else {
                            JOptionPane.showMessageDialog(this, "Số tiền trong tài khoản gữi sau khi gữi phải từ 50.000 VNĐ trở lên");
                        }
                    } catch (SQLException ex) {
                        System.out.println(ex.toString());
                    } finally {
                        //giải phóng tài nguyên khi không sử dụng nữa
                        if (cs != null) {
                            try {
                                cs.close();
                            } catch (SQLException sqlEx) {
                            } //đoạn mã xử lý ng/lệ
                            cs = null;
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Số tiền chuyển phải lớn hơn 10.000 VNĐ");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Số tiền nhập vào không hợp lệ");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Không thể chuyển tiền cho cùng một tài khoản");
            resetFields();
        }


    }//GEN-LAST:event_btnChuyenTienActionPerformed

    private boolean getSoTien() {
        if (txtSoTien.getText().equals("")) {
            return false;
        } else {
            try {
                amount = new BigDecimal(txtSoTien.getText());
            } catch (NumberFormatException e) {
                return false;
            }
        }
        return true;
    }
    private void btnHuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyActionPerformed
        // TODO add your handling code here:
        resetFields();
    }//GEN-LAST:event_btnHuyActionPerformed

    private void resetFields() {
        count = 0;
        txtCMND_G.setText("");
        txtSTK_G.setText("");
        txtChuTK_G.setText("");
        txtSoDu_G.setText("");
        txtCMND_N.setText("");
        txtSTK_N.setText("");
        txtChuTK_N.setText("");
        txtSoDu_N.setText("");
        txtSoTien.setText("");
        txtCMND_G.setEnabled(true);
        txtSTK_G.setEnabled(true);
        btnTimCMND_G.setEnabled(true);
        btnTimSTK_G.setEnabled(true);
        txtCMND_N.setEnabled(true);
        txtSTK_N.setEnabled(true);
        btnTimCMND_N.setEnabled(true);
        btnTimSTK_N.setEnabled(true);
        btnHuy.setEnabled(false);
        btnChuyenTien.setEnabled(false);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChuyenTien;
    private javax.swing.ButtonGroup btnGroup;
    private javax.swing.JButton btnHuy;
    private javax.swing.JButton btnTimCMND_G;
    private javax.swing.JButton btnTimCMND_N;
    private javax.swing.JButton btnTimSTK_G;
    private javax.swing.JButton btnTimSTK_N;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JTextField txtCMND_G;
    private javax.swing.JTextField txtCMND_N;
    private javax.swing.JLabel txtChuTK_G;
    private javax.swing.JLabel txtChuTK_N;
    private javax.swing.JTextField txtSTK_G;
    private javax.swing.JTextField txtSTK_N;
    private javax.swing.JLabel txtSoDu_G;
    private javax.swing.JLabel txtSoDu_N;
    private javax.swing.JTextField txtSoTien;
    // End of variables declaration//GEN-END:variables
}
