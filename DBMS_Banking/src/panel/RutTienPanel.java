/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package panel;

import connection.Connect;
import java.awt.Dimension;
import java.awt.event.KeyEvent;
import java.math.BigDecimal;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Types;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JDialog;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author 84965
 */
public class RutTienPanel extends javax.swing.JPanel {

    private BigDecimal amount = new BigDecimal(0);
    private BigDecimal soTien = new BigDecimal(0);
    Connect connect = new Connect();
    Connection conn = connect.getConnection();
    DecimalFormat decimalFormat = new DecimalFormat("###,###,###");

    /**
     * Creates new form RutTienPanel
     */
    public RutTienPanel() {
        initComponents();
        this.setPreferredSize(new Dimension(668, 445));
    }

    private double convertDecimalToDouble(BigDecimal money) {
        return Double.parseDouble(money.toString());
    }

    private void getDialogReview(String stk, String chuTK, String tien_truoc, String sotien, String tien_sau) {
        String[] options = {"Xác nhận"};
        String title = "Thông tin giao dịch";
        String content = "Số tài khoản:               " + stk + ""
                + "\nChủ tài khoản:            " + chuTK + ""
                + "\nSố tiền trước khi rút:  " + tien_truoc
                + "\nSố tiền đã rút :            " + sotien
                + "\nSố tiền sau khi rút:     " + tien_sau;

        int selection = JOptionPane.showOptionDialog(null, content, title,
                JOptionPane.DEFAULT_OPTION, JOptionPane.PLAIN_MESSAGE, null, options,
                options[0]);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGroup = new javax.swing.ButtonGroup();
        jLabel2 = new javax.swing.JLabel();
        btnRutTien = new javax.swing.JButton();
        btnHuy = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        btnTimCMND = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        rb500 = new javax.swing.JRadioButton();
        rb1000 = new javax.swing.JRadioButton();
        rb2000 = new javax.swing.JRadioButton();
        rbSoTienKhac = new javax.swing.JRadioButton();
        rb4000 = new javax.swing.JRadioButton();
        txtCMND = new javax.swing.JTextField();
        txtSTK = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtSoTienKhac = new javax.swing.JTextField();
        btnTimSTK = new javax.swing.JButton();
        txtChuTK = new javax.swing.JLabel();
        txtTienTrongTK = new javax.swing.JLabel();
        txtLoaiTK = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(242, 242, 242));

        jLabel2.setText("Số chứng minh thư :");

        btnRutTien.setText("Rút tiền");
        btnRutTien.setEnabled(false);
        btnRutTien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRutTienActionPerformed(evt);
            }
        });

        btnHuy.setText("Hủy");
        btnHuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyActionPerformed(evt);
            }
        });

        jLabel3.setText("Số tài khoản : ");

        btnTimCMND.setText("Tìm");
        btnTimCMND.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimCMNDActionPerformed(evt);
            }
        });

        jLabel4.setText("Số tiền muốn rút : ");

        btnGroup.add(rb500);
        rb500.setSelected(true);
        rb500.setText("500.000 đ");

        btnGroup.add(rb1000);
        rb1000.setText("1.000.000 đ");

        btnGroup.add(rb2000);
        rb2000.setText("2.000.000 đ");

        btnGroup.add(rbSoTienKhac);
        rbSoTienKhac.setText("Số tiền khác : ");

        btnGroup.add(rb4000);
        rb4000.setText("4.000.000 đ");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("đ");

        jLabel6.setText("Chủ tài khoản : ");

        jLabel7.setText("Số tiền trong tài khoản : ");

        txtSoTienKhac.setToolTipText("");

        btnTimSTK.setText("Tìm");
        btnTimSTK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimSTKActionPerformed(evt);
            }
        });

        jLabel8.setText("Loại tài khoản:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(138, 138, 138)
                        .addComponent(btnRutTien)
                        .addGap(18, 18, 18)
                        .addComponent(btnHuy))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(rbSoTienKhac)
                                        .addGap(37, 37, 37)
                                        .addComponent(txtSoTienKhac, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(rb500)
                                            .addComponent(rb2000))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(rb4000)
                                            .addComponent(rb1000)))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)
                                .addComponent(txtTienTrongTK))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel6))
                                .addGap(39, 39, 39)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtChuTK)
                                    .addComponent(txtLoaiTK)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtCMND, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnTimCMND))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtSTK, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnTimSTK)))))))
                .addContainerGap(254, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(btnTimCMND)
                    .addComponent(txtCMND, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtSTK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTimSTK))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtLoaiTK))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtChuTK))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtTienTrongTK))
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rb500)
                    .addComponent(rb1000))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rb4000)
                    .addComponent(rb2000))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbSoTienKhac)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSoTienKhac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRutTien)
                    .addComponent(btnHuy))
                .addGap(21, 21, 21))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnRutTienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRutTienActionPerformed
        // TODO add your handling code here:
        CallableStatement cs = null;
        if (getSoTien()) {
            if (convertDecimalToDouble(amount) >= 10000) {
                try {
                    String STK = txtSTK.getText();
                    cs = conn.prepareCall("{call RUT_TIEN(?,?,?)}");
                    cs.setString(1, STK);
                    cs.setBigDecimal(2, amount);
                    cs.registerOutParameter(3, Types.INTEGER);
                    cs.executeQuery();
                    if (cs.getInt(3) == 1) {
                        String tien_truoc = txtTienTrongTK.getText();
                        String stk = txtSTK.getText();
                        String chuTK = txtChuTK.getText();
                        String sotien = decimalFormat.format(amount) + " đ";
                        String tien_sau = decimalFormat.format(new BigDecimal(convertDecimalToDouble(soTien) - convertDecimalToDouble(amount))) + " đ";
                        JOptionPane.showMessageDialog(this, "Rút tiền thành công");
                        resetFields();
                        getDialogReview(stk, chuTK, tien_truoc, sotien, tien_sau);
                    } else if (cs.getInt(3) == 2) {
                        JOptionPane.showMessageDialog(this, "Thẻ VISA của bạn chỉ có thể nợ tối đa 10 triệu đồng");
                    } else {
                        JOptionPane.showMessageDialog(this, "Số tiền trong tài khoản sau khi rút phải từ 50.000 VNĐ trở lên");
                    }
                } catch (SQLException ex) {
                    System.out.println(ex.toString());
                } finally {
                    //giải phóng tài nguyên khi không sử dụng nữa
                    if (cs != null) {
                        try {
                            cs.close();
                        } catch (SQLException sqlEx) {
                        } //đoạn mã xử lý ng/lệ
                        cs = null;
                    }
                }
            } else {
                JOptionPane.showMessageDialog(this, "Số tiền rút phải lớn hơn 10.000 VNĐ");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Số tiền nhập vào không hợp lệ");
        }

    }//GEN-LAST:event_btnRutTienActionPerformed

    private boolean getSoTien() {
        if (rb500.isSelected()) {
            amount = new BigDecimal(500000);
        }
        if (rb1000.isSelected()) {
            amount = new BigDecimal(1000000);
        }
        if (rb2000.isSelected()) {
            amount = new BigDecimal(2000000);
        }
        if (rb4000.isSelected()) {
            amount = new BigDecimal(4000000);
        }
        if (rbSoTienKhac.isSelected()) {
            if (txtSoTienKhac.getText().equals("")) {
                return false;
            } else {
                try {
                    amount = new BigDecimal(txtSoTienKhac.getText());
                } catch (NumberFormatException e) {
                    return false;
                }
            }
        }
        return true;
    }

    private void getSTKDialog(String stk_list[]) {
        final JComboBox<String> combo = new JComboBox<>(stk_list);
        String[] options = {"Xác nhận", "Trở về"};

        String title = "Chọn tài khoản";
        int selection = JOptionPane.showOptionDialog(null, combo, title,
                JOptionPane.DEFAULT_OPTION, JOptionPane.PLAIN_MESSAGE, null, options,
                options[0]);

        if (selection >= 0) {
            if (options[selection].equals("Xác nhận")) {
                String stk = combo.getSelectedItem().toString();
                if (stk != null) {
                    CallableStatement cs = null;
                    ResultSet rs = null;
                    try {
                        cs = conn.prepareCall("{call TIM_TK_STK(?)}");
                        cs.setString(1, stk);
                        rs = cs.executeQuery();
                        while (rs.next()) {
                            txtSTK.setText(stk);
                            txtChuTK.setText(rs.getString("KH_HOTEN"));
                            txtTienTrongTK.setText(decimalFormat.format(rs.getBigDecimal("TK_SODU")) + " đ");
                            soTien = rs.getBigDecimal("TK_SODU");
                            txtLoaiTK.setText(rs.getString("LTK_TEN"));
                            setStatus(false);
                        }
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(this, "Số tài khoản không đúng");
                    } finally {
//giải phóng tài nguyên khi không sử dụng nữa
                        if (rs != null) {
                            try {
                                rs.close();
                            } catch (SQLException sqlEx) {
                            } //đoạn mã xử lý ng/lệ
                            rs = null;
                        }
                        if (cs != null) {
                            try {
                                cs.close();
                            } catch (SQLException sqlEx) {
                            } //đoạn mã xử lý ng/lệ
                            cs = null;
                        }

                    }

                }
            }
        }
    }
    private void btnTimCMNDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimCMNDActionPerformed
        // TODO add your handling code here:
        CallableStatement cs = null;
        ResultSet rs = null;
        if (!txtCMND.getText().equals("")) {
            try {
                String cmnd = txtCMND.getText();
                cs = conn.prepareCall("{call TIM_TK_CMND(?)}");
                cs.setString(1, cmnd);
                rs = cs.executeQuery();
                int count = 0;
                rs.last();
                count = rs.getRow();
                if (count > 1) {
                    rs.first();
                    String[] arr = new String[count];
                    int i = 0;
                    arr[i] = rs.getString("TK_STK");
                    while (rs.next()) {
                        i++;
                        arr[i] = rs.getString("TK_STK");
                    }
                    getSTKDialog(arr);
                } else {
                    if (rs.first()) {
                        txtSTK.setText(rs.getString("TK_STK"));
                        txtChuTK.setText(rs.getString("KH_HOTEN"));
                        txtTienTrongTK.setText(decimalFormat.format(rs.getBigDecimal("TK_SODU")) + " đ");
                        txtLoaiTK.setText(rs.getString("LTK_TEN"));
                        soTien = rs.getBigDecimal("TK_SODU");
                        setStatus(false);
                    } else {
                        JOptionPane.showMessageDialog(this, "Số chứng minh không đúng");
                    }
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Số chứng minh không đúng");
            } finally {
//giải phóng tài nguyên khi không sử dụng nữa
                if (rs != null) {
                    try {
                        rs.close();
                    } catch (SQLException sqlEx) {
                    } //đoạn mã xử lý ng/lệ
                    rs = null;
                }
                if (cs != null) {
                    try {
                        cs.close();
                    } catch (SQLException sqlEx) {
                    } //đoạn mã xử lý ng/lệ
                    cs = null;
                }

            }
        } else {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập số chưng minh thư");
        }

    }//GEN-LAST:event_btnTimCMNDActionPerformed

    private void btnTimSTKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimSTKActionPerformed
        // TODO add your handling code here:
        CallableStatement cs = null;
        ResultSet rs = null;
        if (!txtSTK.getText().equals("")) {
            try {
                String stk = txtSTK.getText();
                cs = conn.prepareCall("{call TIM_TK_STK(?)}");
                cs.setString(1, stk);
                rs = cs.executeQuery();
                if (rs.first()) {
                    txtCMND.setText(rs.getString("KH_CMND"));
                    txtChuTK.setText(rs.getString("KH_HOTEN"));
                    txtLoaiTK.setText(rs.getString("LTK_TEN"));
                    txtTienTrongTK.setText(decimalFormat.format(rs.getBigDecimal("TK_SODU")) + " đ");
                    soTien = rs.getBigDecimal("TK_SODU");
                    setStatus(false);
                } else {
                    JOptionPane.showMessageDialog(this, "Số tài khoản không đúng");
                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Số tài khoản không đúng");
            } finally {
//giải phóng tài nguyên khi không sử dụng nữa
                if (rs != null) {
                    try {
                        rs.close();
                    } catch (SQLException sqlEx) {
                    } //đoạn mã xử lý ng/lệ
                    rs = null;
                }
                if (cs != null) {
                    try {
                        cs.close();
                    } catch (SQLException sqlEx) {
                    } //đoạn mã xử lý ng/lệ
                    cs = null;
                }

            }
        } else {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập số tài khoản");
        }

    }//GEN-LAST:event_btnTimSTKActionPerformed

    private void btnHuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyActionPerformed
        // TODO add your handling code here:
        resetFields();
    }//GEN-LAST:event_btnHuyActionPerformed

    private void setStatus(boolean status) {
        txtCMND.setEnabled(status);
        txtSTK.setEnabled(status);
        btnTimCMND.setEnabled(status);
        btnTimSTK.setEnabled(status);
        btnRutTien.setEnabled(!status);
    }

    private void resetFields() {
        txtCMND.setText("");
        txtSTK.setText("");
        txtChuTK.setText("");
        txtTienTrongTK.setText("");
        txtSoTienKhac.setText("");
        txtLoaiTK.setText("");
        rb500.setSelected(true);
        setStatus(true);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btnGroup;
    private javax.swing.JButton btnHuy;
    private javax.swing.JButton btnRutTien;
    private javax.swing.JButton btnTimCMND;
    private javax.swing.JButton btnTimSTK;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JRadioButton rb1000;
    private javax.swing.JRadioButton rb2000;
    private javax.swing.JRadioButton rb4000;
    private javax.swing.JRadioButton rb500;
    private javax.swing.JRadioButton rbSoTienKhac;
    private javax.swing.JTextField txtCMND;
    private javax.swing.JLabel txtChuTK;
    private javax.swing.JLabel txtLoaiTK;
    private javax.swing.JTextField txtSTK;
    private javax.swing.JTextField txtSoTienKhac;
    private javax.swing.JLabel txtTienTrongTK;
    // End of variables declaration//GEN-END:variables
}
